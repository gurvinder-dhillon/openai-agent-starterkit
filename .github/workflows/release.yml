name: Release

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Run linter
        run: npm run lint

      - name: Run type check
        run: npm run typecheck

      - name: Build project
        run: npm run build

      - name: Test CLI generation
        run: npm run test:generate

      - name: Update version from tag
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          npm version $VERSION --no-git-tag-version

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub release notes
        uses: actions/github-script@v7
        with:
          script: |
            const { data: release } = await github.rest.repos.getRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id
            });
            
            const releaseNotes = `
            ## ðŸŽ‰ OpenAI Agent Starter Kit v${release.tag_name}
            
            ${release.body}
            
            ## ðŸ“¦ Installation
            
            \`\`\`bash
            npx openai-agent-starterkit@${release.tag_name} --pattern augmented-llm --name my-agent
            \`\`\`
            
            ## ðŸ”— Links
            - [NPM Package](https://www.npmjs.com/package/openai-agent-starterkit)
            - [Documentation](https://github.com/${context.repo.owner}/${context.repo.repo}#readme)
            - [Report Issues](https://github.com/${context.repo.owner}/${context.repo.repo}/issues)
            `;
            
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id,
              body: releaseNotes
            });